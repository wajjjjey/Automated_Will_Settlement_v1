/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TransferContract,
  TransferContractInterface,
} from "../../contracts/TransferContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "executeTransfers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenAmounts",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokenRecipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "nftTokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "nftRecipients",
        type: "address[]",
      },
    ],
    name: "setTransferData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001272380380620012728339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b61105b80620002176000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639699114c14610084578063b15a0c581461008e578063f2fde38b146100aa575b600080fd5b6100646100c6565b005b61006e6100da565b60405161007b91906108a1565b60405180910390f35b61008c610103565b005b6100a860048036038101906100a39190610b4e565b61051d565b005b6100c460048036038101906100bf9190610c55565b61059f565b005b6100ce610622565b6100d860006106a0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61010b610622565b600660149054906101000a900460ff161561015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610cdf565b60405180910390fd5b60006101656100da565b905060008173ffffffffffffffffffffffffffffffffffffffff16633b0683cc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d89190610d3d565b90508073ffffffffffffffffffffffffffffffffffffffff1663343c5e366101fe6100da565b6040518263ffffffff1660e01b815260040161021a91906108a1565b602060405180830381865afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b9190610da2565b61029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610e1b565b60405180910390fd5b60005b6001805490508110156103e5576000600182815481106102c0576102bf610e3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd6103116100da565b6003858154811061032557610324610e3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002868154811061036457610363610e3b565b5b90600052602060002001546040518463ffffffff1660e01b815260040161038d93929190610e79565b6020604051808303816000875af11580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190610da2565b505080806103dd90610edf565b91505061029d565b5060005b6005805490508110156104fd57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd61043c6100da565b600484815481106104505761044f610e3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005858154811061048f5761048e610e3b565b5b90600052602060002001546040518463ffffffff1660e01b81526004016104b893929190610e79565b600060405180830381600087803b1580156104d257600080fd5b505af11580156104e6573d6000803e3d6000fd5b5050505080806104f590610edf565b9150506103e9565b506001600660146101000a81548160ff0219169083151502179055505050565b610525610622565b846002908051906020019061053b92919061076c565b5083600190805190602001906105529291906107b9565b5082600390805190602001906105699291906107b9565b50816005908051906020019061058092919061076c565b5080600490805190602001906105979291906107b9565b505050505050565b6105a7610622565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f99565b60405180910390fd5b61061f816106a0565b50565b61062a610764565b73ffffffffffffffffffffffffffffffffffffffff166106486100da565b73ffffffffffffffffffffffffffffffffffffffff161461069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069590611005565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280548282559060005260206000209081019282156107a8579160200282015b828111156107a757825182559160200191906001019061078c565b5b5090506107b59190610843565b5090565b828054828255906000526020600020908101928215610832579160200282015b828111156108315782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107d9565b5b50905061083f9190610843565b5090565b5b8082111561085c576000816000905550600101610844565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088b82610860565b9050919050565b61089b81610880565b82525050565b60006020820190506108b66000830184610892565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61091e826108d5565b810181811067ffffffffffffffff8211171561093d5761093c6108e6565b5b80604052505050565b60006109506108bc565b905061095c8282610915565b919050565b600067ffffffffffffffff82111561097c5761097b6108e6565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6109a581610992565b81146109b057600080fd5b50565b6000813590506109c28161099c565b92915050565b60006109db6109d684610961565b610946565b905080838252602082019050602084028301858111156109fe576109fd61098d565b5b835b81811015610a275780610a1388826109b3565b845260208401935050602081019050610a00565b5050509392505050565b600082601f830112610a4657610a456108d0565b5b8135610a568482602086016109c8565b91505092915050565b600067ffffffffffffffff821115610a7a57610a796108e6565b5b602082029050602081019050919050565b610a9481610880565b8114610a9f57600080fd5b50565b600081359050610ab181610a8b565b92915050565b6000610aca610ac584610a5f565b610946565b90508083825260208201905060208402830185811115610aed57610aec61098d565b5b835b81811015610b165780610b028882610aa2565b845260208401935050602081019050610aef565b5050509392505050565b600082601f830112610b3557610b346108d0565b5b8135610b45848260208601610ab7565b91505092915050565b600080600080600060a08688031215610b6a57610b696108c6565b5b600086013567ffffffffffffffff811115610b8857610b876108cb565b5b610b9488828901610a31565b955050602086013567ffffffffffffffff811115610bb557610bb46108cb565b5b610bc188828901610b20565b945050604086013567ffffffffffffffff811115610be257610be16108cb565b5b610bee88828901610b20565b935050606086013567ffffffffffffffff811115610c0f57610c0e6108cb565b5b610c1b88828901610a31565b925050608086013567ffffffffffffffff811115610c3c57610c3b6108cb565b5b610c4888828901610b20565b9150509295509295909350565b600060208284031215610c6b57610c6a6108c6565b5b6000610c7984828501610aa2565b91505092915050565b600082825260208201905092915050565b7f5472616e736665727320616c7265616479206578656375746564000000000000600082015250565b6000610cc9601a83610c82565b9150610cd482610c93565b602082019050919050565b60006020820190508181036000830152610cf881610cbc565b9050919050565b6000610d0a82610880565b9050919050565b610d1a81610cff565b8114610d2557600080fd5b50565b600081519050610d3781610d11565b92915050565b600060208284031215610d5357610d526108c6565b5b6000610d6184828501610d28565b91505092915050565b60008115159050919050565b610d7f81610d6a565b8114610d8a57600080fd5b50565b600081519050610d9c81610d76565b92915050565b600060208284031215610db857610db76108c6565b5b6000610dc684828501610d8d565b91505092915050565b7f4e6f7420656e6f756768206578656375746f72207369676e6174757265730000600082015250565b6000610e05601e83610c82565b9150610e1082610dcf565b602082019050919050565b60006020820190508181036000830152610e3481610df8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610e7381610992565b82525050565b6000606082019050610e8e6000830186610892565b610e9b6020830185610892565b610ea86040830184610e6a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eea82610992565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f1c57610f1b610eb0565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f83602683610c82565b9150610f8e82610f27565b604082019050919050565b60006020820190508181036000830152610fb281610f76565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610fef602083610c82565b9150610ffa82610fb9565b602082019050919050565b6000602082019050818103600083015261101e81610fe2565b905091905056fea2646970667358221220d0d1baf5c5f3ed72be202b6dd23bffc99d6044d578bfb571c58a1c55ec9d785e64736f6c63430008120033";

type TransferContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferContract__factory extends ContractFactory {
  constructor(...args: TransferContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    nftContractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TransferContract> {
    return super.deploy(
      nftContractAddress,
      overrides || {}
    ) as Promise<TransferContract>;
  }
  override getDeployTransaction(
    nftContractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(nftContractAddress, overrides || {});
  }
  override attach(address: string): TransferContract {
    return super.attach(address) as TransferContract;
  }
  override connect(signer: Signer): TransferContract__factory {
    return super.connect(signer) as TransferContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferContractInterface {
    return new utils.Interface(_abi) as TransferContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferContract {
    return new Contract(address, _abi, signerOrProvider) as TransferContract;
  }
}
